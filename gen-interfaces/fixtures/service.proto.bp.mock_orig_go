package Service

import (
	"golang.org/x/net/context"
	google_protobuf "github.com/golang/protobuf/ptypes/empty"
	"google.golang.org/grpc"
)

type ServiceServiceClientMock struct {
}

func NewServiceServiceClientMock() ServiceServiceClient {
	return &ServiceServiceClientMock{}
}


func (s *HorseServiceClientMock) GetVersion(ctx context.Context, in *google_protobuf.Empty, opts ...grpc.CallOption) (*Version, error) {

	return &Version{}, nil
}

func (s *HorseServiceClientMock) ListHorses(ctx context.Context, in *google_protobuf.Empty, opts ...grpc.CallOption) (*HorseList, error) {

	return &HorseList{}, nil
}

func (s *HorseServiceClientMock) GetTrainingData(ctx context.Context, in *GraphIDMessage, opts ...grpc.CallOption) (*TrainingDataList, error) {

	return &TrainingDataList{}, nil
}

func (s *HorseServiceClientMock) GetTrainingByID(ctx context.Context, in *IDMessage, opts ...grpc.CallOption) (*Training, error) {

	return &Training{}, nil
}

func (s *HorseServiceClientMock) ListTrainings(ctx context.Context, in *Paging, opts ...grpc.CallOption) (*TrainingList, error) {

	return &TrainingList{}, nil
}

func (s *HorseServiceClientMock) GetTrainingsByHorseID(ctx context.Context, in *IDMessage, opts ...grpc.CallOption) (*TrainingList, error) {

	return &TrainingList{}, nil
}

func (s *HorseServiceClientMock) GetHorse(ctx context.Context, in *IDMessage, opts ...grpc.CallOption) (*Horse, error) {

	return &Horse{}, nil
}

func (s *HorseServiceClientMock) GetHorseFromFEI(ctx context.Context, in *IDMessage, opts ...grpc.CallOption) (*Horse, error) {

	return &Horse{}, nil
}

func (s *HorseServiceClientMock) CreateTraining(ctx context.Context, in *Training, opts ...grpc.CallOption) (*Training, error) {

	return &Training{}, nil
}

func (s *HorseServiceClientMock) CreateHorse(ctx context.Context, in *Horse, opts ...grpc.CallOption) (*Horse, error) {

	return &Horse{}, nil
}

func (s *HorseServiceClientMock) UpdateHorse(ctx context.Context, in *Horse, opts ...grpc.CallOption) (*Horse, error) {

	return &Horse{}, nil
}

func (s *HorseServiceClientMock) DeleteTraining(ctx context.Context, in *IDMessage, opts ...grpc.CallOption) (*google_protobuf.Empty, error) {

	return &google_protobuf.Empty{}, nil
}

func (s *HorseServiceClientMock) DeleteHorse(ctx context.Context, in *IDMessage, opts ...grpc.CallOption) (*google_protobuf.Empty, error) {

	return &google_protobuf.Empty{}, nil
}

func (s *HorseServiceClientMock) CreateActivity(ctx context.Context, in *Activity, opts ...grpc.CallOption) (*Activity, error) {

	return &Activity{}, nil
}

func (s *HorseServiceClientMock) ReadActivity(ctx context.Context, in *Activity, opts ...grpc.CallOption) (*Activity, error) {

	return &Activity{}, nil
}

func (s *HorseServiceClientMock) ReadActivities(ctx context.Context, in *Activity, opts ...grpc.CallOption) (*ActivityList, error) {

	return &ActivityList{}, nil
}

func (s *HorseServiceClientMock) UpdateActivity(ctx context.Context, in *Activity, opts ...grpc.CallOption) (*Activity, error) {

	return &Activity{}, nil
}

func (s *HorseServiceClientMock) DeleteActivity(ctx context.Context, in *Activity, opts ...grpc.CallOption) (*google_protobuf.Empty, error) {

	return &google_protobuf.Empty{}, nil
}

func (s *HorseServiceClientMock) CreateHorseSharing(ctx context.Context, in *HorseSharing, opts ...grpc.CallOption) (*HorseSharing, error) {

	return &HorseSharing{}, nil
}

func (s *HorseServiceClientMock) ReadHorseSharingByHorseID(ctx context.Context, in *HorseSharing, opts ...grpc.CallOption) (*HorseSharingList, error) {

	return &HorseSharingList{}, nil
}

func (s *HorseServiceClientMock) ReadHorseSharingByUserID(ctx context.Context, in *HorseSharing, opts ...grpc.CallOption) (*HorseSharingList, error) {

	return &HorseSharingList{}, nil
}

func (s *HorseServiceClientMock) DeleteHorseSharing(ctx context.Context, in *IDMessage, opts ...grpc.CallOption) (*google_protobuf.Empty, error) {

	return &google_protobuf.Empty{}, nil
}
